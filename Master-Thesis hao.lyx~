#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrreprt
\begin_preamble
% verschieden Symbole, Zeichen wie (c), €
\usepackage{textcomp,units}

% Mehr Platz zwischen Tabelle und Untertitel
\usepackage{caption}
\captionsetup[table]{skip=10pt}

%Kapitelzahl sehr groß
\makeatletter% siehe De-TeX-FAQ 
 \renewcommand*{\chapterformat}{% 
   \begingroup% damit \unitlength-Änderung lokal bleibt 
     \setlength{\unitlength}{1mm}% 
     \begin{picture}(10,10)(0,5) 
       \setlength{\fboxsep}{0pt} 
       %\put(0,0){\framebox(20,40){}}% 
       %\put(0,20){\makebox(20,20){\rule{20\unitlength}{20\unitlength}}}% 
       \put(10,15){\line(1,0){\dimexpr 
           \textwidth-20\unitlength\relax\@gobble}}% 
       \put(0,0){\makebox(10,20)[r]{% 
           \fontsize{28\unitlength}{28\unitlength}\selectfont\thechapter 
           \kern-.05em% Ziffer in der Zeichenzelle nach rechts schieben 
         }}% 
       \put(10,15){\makebox(\dimexpr 
           \textwidth-20\unitlength\relax\@gobble,\ht\strutbox\@gobble)[l]{% 
             \ \normalsize\color{black}\chapapp~\thechapter\autodot 
           }}% 
     \end{picture} % <-- Leerzeichen ist hier beabsichtigt! 
   \endgroup 
}

\usepackage{ %a4wide,
            ellipsis, fixltx2e, mparhack,   %Fehlerkorrektur für Marginalien
            booktabs, longtable             %schönere Tabellen
}  

\usepackage[automark]{scrpage2}
%\automark[chapter]{chapter}
\clearscrheadfoot
\ohead{\\\headmark}
\ihead{\includegraphics[scale=0.15]{logo.jpg}}%\pagemark}
\ofoot[\pagemark]{\pagemark}


%Kurzfassung und Abstract (englisch) auf eine Seite
\renewenvironment{abstract}{
    \@beginparpenalty\@lowpenalty
      \begin{center}
        \normalfont\sectfont\nobreak\abstractname
        \@endparpenalty\@M
      \end{center}
}{
    \par
}



% schönerer Blocksatz!!
\usepackage{microtype}

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used

%set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}{\usepackage{lmodern}}
  {\usepackage[scaled=0.92]{helvet}
    \usepackage{mathptmx}
    \usepackage{courier} }
\fi

 % the pages of the TOC are numbered roman
 % and a pdf-bookmark for the TOC is added
 \pagenumbering{roman}
 \let\myTOC\tableofcontents
 \renewcommand\tableofcontents{
   %\pdfbookmark[1]{Contents}{}
   \myTOC
   \clearpage
   \pagenumbering{arabic}}

%Bezeichungen anpassen
%Babelpaket muß zuvor geladen werden
%\usepackage[english]{babel}
%\addto\captionsngerman{} 
%\renewcommand{\figurename}{Abb.}% 
%\renewcommand{\tablename}{Tab.}% 
%\renewcommand{\abstractname}{Summary}
%\renewcommand{\nomname}{Abkürzungen}


% Alle Querverweise und URLs als Link darstellen
% In der PDF-Ausgabe
 \usepackage[colorlinks=true, bookmarks, bookmarksnumbered, bookmarksopen, bookmarksopenlevel=1,
  linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,
  pdfpagelayout=OneColumn, pdfnewwindow=true,
  pdfstartview=XYZ, plainpages=false, pdfpagelabels,
  pdfauthor={LyX Team}, pdftex,
  pdftitle={LyX's Figure, Table, Floats, Notes, and Boxes manual},
  pdfsubject={LyX-documentation about figures, tables, floats, notes, and boxes},
  pdfkeywords={LyX, Tables, Figures, Floats, Boxes, Notes}]{hyperref}

%mehr Platz zwischen Überschrift und Tabelle
\newcommand{\@ldtable}{}
\let\@ldtable\table
\renewcommand{\table}{ %
                 \setlength{\@tempdima}{\abovecaptionskip} %
                 \setlength{\abovecaptionskip}{\belowcaptionskip} %
                 \setlength{\belowcaptionskip}{\@tempdima} %
                 \@ldtable}

%In dieser Arbeit wird auf die Nomenklatur als Abkürzungsverzeichnis verzichtet. Bei Wunsch wieder aktivieren.
%Nomenklatur als Abkürzungsverzeichnis verwenden
%\renewcommand{\nomname}{Abkürzungsverzeichnis}
%\renewcommand{\nomlabelwidth}{20mm}

%Nomenklatur als Glossar verwenden
%Nur Noetig wenn auch Glossar verwendet wird.
%\renewcommand{\nomname}{Glossary}

%Farbe für Programmcode festlegen
%\definecolor{lightgray}{rgb}{0.8,0.8,0.8}
\end_preamble
\options pointlessnumbers, abstracton, headsepline,
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 120
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing other 1.2
\use_hyperref false
\pdf_title "Analyse und Interpretation des Risswachstums an thermisch hochbelasteten Bauteilen für die Fusionsforschung mittels IR Diagnostik und FE Modellierung"
\pdf_author "Timo Schindler"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\topmargin 2.5cm
\bottommargin 3.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle plain
\bullet 2 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
titlepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/Logo_Uni_Kassel.eps
	lyxscale 50

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Faculty Elektrotechnik / Informatik
\size default

\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 7cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\size larger
Master Thesis
\end_layout

\begin_layout Standard
\noindent
\align left

\size large
Homework Manage System with Git-Support and hierarchical File database for
 Data management
\end_layout

\begin_layout Standard
\noindent
\align left

\size larger
\begin_inset VSpace 1.5cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Submitted by:
\begin_inset space \hspace{}
\length 1cm
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hao Gao
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Matriculation number: 33101387
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supervised by:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prof.
 Dr.
 Albert Zündorf
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universität Kassel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prof.
 Dr.
 Gerd Stumme
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universität Kassel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kassel, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 17.1mm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\size huge
Declaration of Authorship
\end_layout

\begin_layout Standard
Deutsch oder English?
\end_layout

\begin_layout Standard
\begin_inset VSpace 2cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="15cm">
<column alignment="center" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kassel, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hao Gao
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ACHTUNG: Hier am Ende noch die richtige Seite einstellen! Sonst passt die
 Nummerierung nicht!
\end_layout

\begin_layout Plain Layout
!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{4}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
motivation, why we need this kind of hms?
\end_layout

\begin_layout Chapter
Basics
\end_layout

\begin_layout Standard
what were used in this project?explain the basics of the techniques
\end_layout

\begin_layout Section
techniques like framework and jpa?
\end_layout

\begin_layout Standard
or?
\end_layout

\begin_layout Section
Related works
\end_layout

\begin_layout Standard
moodle?
\end_layout

\begin_layout Chapter
Design
\end_layout

\begin_layout Standard
The HMS (Homework Management System) is a web platform to manage the activities
 related to the homework including handing out the related materieals to
 the students,collecting the handed in homework and managing the evaluation
 of the assignment.
 In this chapter the detailed design of functions to support those activities
 will be discussed.
 Furthermore the problems of the current alternative system will be analised
 and the solutions to those problem will be introduced.
\end_layout

\begin_layout Standard
The functions of the 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

 system are divided into two parts.
 The first part is to develop the common features which are similar to other
 web platform,for instance 
\begin_inset Quotes sld
\end_inset

register a user account
\begin_inset Quotes srd
\end_inset

 .
 The second part of the design is to develop the special core features to
 make the HMS system better platform compare to others, the dynamic datamanageme
nt and the git based homework management.
 
\end_layout

\begin_layout Section
Common functions
\end_layout

\begin_layout Standard
The main task of 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

 is handling the process of handing in and handing out the homework between
 the students and teachers.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/generall.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The use case from the perspective of different roll of user.
\begin_inset CommandInset label
LatexCommand label
name "fig:The-use-case"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
As the Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-use-case"

\end_inset

 shows,there are several steps within this process from the prospective
 of the user roll.
 First considering the user roll of students,the student should be able
 to register a account of 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

, after logging into the system the students can browsing all the available
 courses in the system and subscribing the target course.
 Then it is possible for the students to view the homepage of the course
 and download the available homework.
 and finally uploading the solutions to the homework accordingly.
 the process of uploading a homework to the system is finished at the student
 side.
 now take a look at the side of Teacher and Assistant, besides the registration
 and logging process, the user group of teacher can create new course and
 new assignment also collecting the handed in homework and give them back
 to the students once the evaluation is finished.
 The assistants however can not creating new course, but should be able
 to add new assignment and evaluate the handed in homework as well.
 In summary, in order to realize the main task of the 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

, the 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

 system should have following capabilities:
\end_layout

\begin_layout Enumerate
User management including 
\begin_inset Quotes sld
\end_inset

Registration
\begin_inset Quotes srd
\end_inset

 , 
\begin_inset Quotes sld
\end_inset

Role based access control
\begin_inset Quotes srd
\end_inset

,
\begin_inset Quotes srd
\end_inset

Self management
\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Enumerate
Course management including 
\begin_inset Quotes sld
\end_inset

Creation of Course
\begin_inset Quotes srd
\end_inset

,
\begin_inset Quotes srd
\end_inset

Modification of Course
\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Enumerate
Assignment management including 
\begin_inset Quotes sld
\end_inset

Creation of Assignment
\begin_inset Quotes srd
\end_inset

,
\begin_inset Quotes srd
\end_inset

Distribution of Assignment
\begin_inset Quotes srd
\end_inset

,
\begin_inset Quotes srd
\end_inset

Collecting of Assignment
\begin_inset Quotes srd
\end_inset

,
\begin_inset Quotes srd
\end_inset

Evaluation of Assignment
\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Standard
Besides the above listed capabilities, the HMS should also provide a way
 that the students and teachers can communicate with each other.
 firstly a private message system will be needed for the students and teachers
 to exchange the information about the problem of assignment or evaluations
 individually,also the new message system should work as a instant message
 system,in this way the questions or the problems between the students and
 teachers can resolve more efficiently.
 secondly, a course forum is also not a bad idea, a common scenario is that
 more students may have a same question for a new assignment, if a students
 write a new post about this question, and the teacher gives a answer to
 the question, the other students with the same question can also get the
 answers and avoiding asking the same questions again.
 This saves the time from both side.
 So the communications system for the HMS has two parts:
\end_layout

\begin_layout Enumerate
Instant private message system.
\end_layout

\begin_layout Enumerate
a public course forum for each course.
\end_layout

\begin_layout Subsection
User management
\begin_inset CommandInset label
LatexCommand label
name "sub:User-management"

\end_inset


\end_layout

\begin_layout Standard
The user management of the 
\begin_inset Quotes sld
\end_inset

HMS
\begin_inset Quotes srd
\end_inset

 system consists of several modules(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-Modules-of-usermanagement"

\end_inset

), first is the registration module, with this module the user can use their
 email address to register a account in HMS system.
 second is the self management module.
 after the user has logged into the system, they should be able to change
 their emails and password or other personal details.third is the user role
 control module, this is necessary for system to arrange the proper functions
 to the current user based on their user role, the user obtains a startup
 role at the registration, later on the user role can be changed by the
 system admin.
 In the rest of this section, all the modules will be detailed discussed.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/User management.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The Modules of user management
\begin_inset CommandInset label
LatexCommand label
name "fig:The-Modules-of-usermanagement"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
a.
 Registration
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Registration activity_cut.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration activity
\begin_inset CommandInset label
LatexCommand label
name "fig:Registration-activity"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Registration-activity"

\end_inset

 shows the workflow when a user register a new account.
 the user first use the registration form to fill in all the relevant informatio
n , for instance the password, email, and students number, after clicking
 the sign up button, the whole process begins, first the validation of the
 registration form will be performed to check whether the user has fill
 in all the required field and without error, if user passed the form validation
, the HMS system will then send a confirmation email with a confirmation
 URL to the email address from the registration form, if the user click
 the confirmation link, the user will be redirect to the website and can
 directly starting using the account.
 Otherwise the user has to start over the registration process.
 The step of email address confirmation is important because this procedure
 allows the system to check that the user actually signed up for the account
 and guarantee the email of this user is valid and ready to receive the
 system information.
\end_layout

\begin_layout Subsubsection
b.
 Self Management
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/self management.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The functions of self management
\begin_inset CommandInset label
LatexCommand label
name "fig:The-functions-of-selfmanagement"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is very common that user may forget their passwords or even worse their
 registered email becomes invalid, so it is necessary to develop the functions,
 user can use to reset their email and passwords.
 The resetting of email address or the passwords works similar as registration.
 If user choose to reset their email address, first they will be asked to
 type in the new email address,after that user click the reset button, the
 system should send a new confirmation email to the new address, when user
 click the hyper link in the email, a new web page will be generated and
 user can confirm the address change.
 if user choose to reset their passwords, they just need to click the reset
 password button, the system will send another confirmation email with a
 hyper link, the user can use this link to type in their new passwords.
 Besides the modification of passwords and email address,there is another
 function should be added to self management, thus the HMS system use git
 server to control all the homework files, and this git server use ssh to
 authenticate the connections, the system should also provide a function
 that user can add their ssh public key to the git server, so that they
 can connect their computer direct to the git server.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-functions-of-selfmanagement"

\end_inset

gives a overview for all the components of the self management.
\end_layout

\begin_layout Subsubsection
c.
 Role based access control
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Admin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Students
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Assistents
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teachers
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
System Functions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create Lecture
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create Assignment
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Evaluation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Join Lecture
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hand in Homework
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Forum & Message
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Self Manage
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
◯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
●
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Different user role in HMS system
\begin_inset CommandInset label
LatexCommand label
name "fig:Different-user-role"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The user of the HMS system has different roles to perform different actions,
 for instance a teacher can create new course but students can not, so it
 is important to have a subsystem to disinguish the user roleso that the
 HMS can serve proper functions to the user.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Different-user-role"

\end_inset

 shows all the user role in HMS system,first is the 
\begin_inset Quotes sld
\end_inset


\shape slanted
system admin
\shape default

\begin_inset Quotes srd
\end_inset

, the job of system admin is to manage other user's role and the system
 data(backup the database and related files in certain times),any other
 functions of the HMS is irelevant to the system admin.
 second is the default user,the user with this role can not do much things
 other than updating their personal data(passwords and email).
 third user role is students, with student account the user can browse all
 the available course and join the course, download and upload homework,
 using the communication system like chat and forum.
 fourth user role is assistants, besides all the functions of students,
 assistants can review all the student's homework and make a evaluation,last
 one is the teacher, the teacher account has all the functions of assistant
 account and additionally the teacher can create new course.
\end_layout

\begin_layout Subsection
Course management
\end_layout

\begin_layout Standard
The typical course provided by the faculty software engineering and their
 evaluation methods are listed as follows:
\end_layout

\begin_layout Itemize
Bachlor Programming Methodology: Evaluation through final exam
\end_layout

\begin_layout Itemize
Bachlor Design-Pattern: Evaluation from multiple sub project
\end_layout

\begin_layout Itemize
Master Software Engineering 2: Evaluation from semester project
\end_layout

\begin_layout Itemize
Master Compiler Construction: Evaluation from multiple sub project
\end_layout

\begin_layout Itemize
Master Graph-Model : Evaluation through final exam
\end_layout

\begin_layout Standard
Above course can be divided into two categories.
 in the first type of course the students have to hand in various homework,
 and the points gained from those homework are usually used as a prerequisite
 for the final exam.
 in the second type of course the students will get a semester assignment,
 normally a whole software project, the points gained from this project
 usually is the final points for this course.
 additionally every students will get a git repository after user had signed
 up the course,this repository will also worked in two modes according to
 the type of course,the details of git working modes will be discussed later
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Submission-management"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="middle" width="4cm">
<column alignment="left" valignment="middle" width="4cm">
<column alignment="left" valignment="middle" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Features
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\noindent
\align left
Precondition to final exam
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Git repository Mods
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Performance Evaluation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type I
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
Students have to hand in at least amount of valid homework.
\end_layout

\begin_layout Enumerate
\noindent
\align left
A valid homework requires normally for students to gain more than 50% points
 of a assignment.
\end_layout

\begin_layout Enumerate
A student should gain at least 50% of total points for final exam
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Git repository works under local modus
\begin_inset Newline newline
\end_inset

(Student can only hand in the homeworks through course homepage)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
need detail evaluation of assignments
\begin_inset Newline newline
\end_inset

(number of valid handin, percentage of gained points)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type II
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None,Students just need to hand in the final project(may consists sub.
 project)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Git repository works under remote modus
\begin_inset Newline newline
\end_inset

(Student can use the course repository as any remote git repository)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Only final evaluation
\end_layout

\begin_layout Plain Layout
(or multiple sub.evaluation)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Features of different types of course
\begin_inset CommandInset label
LatexCommand label
name "tab:Features-of-course"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Features-of-course"

\end_inset

 shows the different features of different types of course.The function of
 
\begin_inset Quotes sld
\end_inset

creating course
\begin_inset Quotes srd
\end_inset

 should take all the features from above into consideration.
 
\end_layout

\begin_layout Subsection
Assignment management
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/assignment management.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram for assignment management
\begin_inset CommandInset label
LatexCommand label
name "fig:Sequenz-diagram-for-assignment"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenz-diagram-for-assignment"

\end_inset

 shows the sequence of handing in and handing out a assignment, after creating
 a new course, teacher can start adding assignments to the course, when
 a new assignment has been successfully added to the course, the course
 homepage for students will show this new assignment and with a download
 link, student can download the assignment and start working on the new
 assignment.
 later when students finished the assignment,the solution will be uploaded
 to the according assignment and teacher can review them at the evaluation
 part of the course's homepage and add a evaluation to the solution.
 When the evaluation is successfully saved to the assignment, the student
 will get the results directly at course homepage.
 
\end_layout

\begin_layout Subsection
Communication system
\end_layout

\begin_layout Subsubsection
a.
 Forum
\end_layout

\begin_layout Standard
The HMS system has a standard client-server structure, the client and server
 communicate with each other over internet using HTTP protocol.
\begin_inset CommandInset citation
LatexCommand cite
key "daa"

\end_inset

 HTTP has a typical 
\begin_inset Quotes sld
\end_inset

Request-Response
\begin_inset Quotes srd
\end_inset

 pattern, the web client sends a request to the web server, web server serves
 a response according to the web client request.
 It is a simple but powerful solution to provide a two-way conversation
 for two party over one channel.
\begin_inset CommandInset citation
LatexCommand cite
key "Hohpe2012"

\end_inset

 The forum function within the HMS system works also after this pattern.
 
\end_layout

\begin_layout Subsubsection
b.
 Instant message
\end_layout

\begin_layout Standard
The standard HTTP protocol however is not suited for the instant message
 system, because of the 
\begin_inset Quotes sld
\end_inset

Request-Response
\begin_inset Quotes srd
\end_inset

 message pattern, user has to manually ask for a content upgrade.
 But a instant message system needs automatically update the chat contents
 on both side of a conversations while a new message has been added
\begin_inset CommandInset citation
LatexCommand cite
key "day2000model"

\end_inset

.
 therefore a full-duplex communication system 
\begin_inset Quotes sld
\end_inset

Web Socket
\begin_inset Quotes srd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "mozilla"

\end_inset

will be used to back up the message module.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Websocket-message-pattern"

\end_inset

 illustrate a simple scenario of a dialog based on web socket.
 after logging into their HMS account user A and user B are both connecting
 to the HMS web socket server, later on user A send a new message to user
 B,first the request from user A are passing to the web socket server,the
 server processed the request accordingly and served the response not only
 to the user A but also automatically served the response to the user B,this
 ensure the both side of the conversation can have their message received
 in real time.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/message.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Web socket message pattern
\begin_inset CommandInset label
LatexCommand label
name "fig:Websocket-message-pattern"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Specific functions
\end_layout

\begin_layout Standard
There are three major problems in other homework management platforms:
\end_layout

\begin_layout Enumerate
Management of file submission
\end_layout

\begin_layout Enumerate
Centralized data persistent(single database)
\end_layout

\begin_layout Enumerate
Back up lecture data
\end_layout

\begin_layout Standard
the first problem is the management of the student's submission, besides
 of upload the file to the server ,there will be usually more additional
 function needs to be added to support different needs related to hand in
 homework.
 for instance the documentation of moodle has suggestes several submission
 type related to file submission
\begin_inset CommandInset citation
LatexCommand cite
key "documoodle"

\end_inset

:
\end_layout

\begin_layout Enumerate
Student submit a work and teacher download it later.
\end_layout

\begin_layout Enumerate
Student submit a work multiple times.
\end_layout

\begin_layout Enumerate
Student submit a work with a response.
\end_layout

\begin_layout Standard
and teacher needs to do several settings to make those type work properly,
 this introduced unnecessary extra cost not only for development but also
 for the user of the system.
 on the other hand the this approch did'nt take the 
\begin_inset Quotes sld
\end_inset

Type II
\begin_inset Quotes srd
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Features-of-course"

\end_inset

course into consideration, it is possible to hand in the semester project
 to the server just using this method, but uploading a whole semester project
 to the system at the end of semester is sometimes risky for the students(Data
 loss of the computer before dead line), and the teachers may need to trace
 the project history to comprehend the work of students(avoiding plagiarism).
 
\end_layout

\begin_layout Standard
the second and third problem are related to each other, because all the
 data are presistent in a single data base , the backup procedure is complicated
 and time consuming.
 all these platform including HMS are desinged for a faculty in university,
 it's very common once in a while the faculty need to archive or backup
 the old data from the past term.
 A possible way is query out all the related data based on the semester,
 then dump these data into file and save the course related files some where
 else.
 Moodle also use this approach to make a course backup
\begin_inset CommandInset citation
LatexCommand cite
key "moodlebackup"

\end_inset

.
 since the amount of data will increasing rapidly after years of use, this
 approch can only comsume more times.
\end_layout

\begin_layout Standard
The HMS has introduced two new approch two avoid the problem from above:
\end_layout

\begin_layout Enumerate
Git based file submission
\end_layout

\begin_layout Enumerate
Dynamic data management
\end_layout

\begin_layout Standard
this two methods will be detailed introduced in the rest of this section.
\end_layout

\begin_layout Subsection
Submission management using GIT
\begin_inset CommandInset label
LatexCommand label
name "sub:Submission-management"

\end_inset


\end_layout

\begin_layout Standard
Instead uploading a file to a simple folder on the server, the students
 will obtain a git repository when they first entering the course.
 using a git repository other than a normal file folder has several advantages.
 firstly the implementation of different submission type is not needed anymore
 and don't need user to do extra settings.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/git.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Workflow of git
\begin_inset CommandInset label
LatexCommand label
name "fig:Workflow-of-git"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Workflow-of-git"

\end_inset

 shows the use case for all submission type
\begin_inset CommandInset citation
LatexCommand cite
key "documoodle"

\end_inset

 when using the git repository.
 no matter what submission type was chosen by the user, the only difference
 is how many commits were made.
 especially by the submission type 
\begin_inset Quotes sld
\end_inset


\shape italic
upload solution multiple times
\shape default

\begin_inset Quotes srd
\end_inset

.
 since the nature of the git repository is to track the history of file
 change, teacher can easiely review all the changes were made between the
 uploads without extra efforts.
 on the teacher side they just need to checkout the students git repository
 and review the change history and give the evaluation.
 secondly using a git repository in 
\begin_inset Quotes sld
\end_inset


\shape italic
Type II
\shape default

\begin_inset Quotes srd
\end_inset

 course is more convinient for students and teachers to manage the project,
 since the assignment of 
\begin_inset Quotes sld
\end_inset


\shape italic
Type II
\shape default

\begin_inset Quotes srd
\end_inset

 course is usally a semester project, the students can use this repository
 to host their project to avoid the risk of dataloss, or not able to submit
 whole project before deadline.
 the teacher can also more easiely track the work history of the student's
 project.
 
\end_layout

\begin_layout Standard
since there are two types of course(Figure: 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Features-of-course"

\end_inset

), the git repository will also work under two modes to fit the property
 of course:
\end_layout

\begin_layout Enumerate
Local modes(for 
\begin_inset Quotes sld
\end_inset

Type I
\begin_inset Quotes srd
\end_inset

 course)
\end_layout

\begin_layout Enumerate
Remote modes(for 
\begin_inset Quotes sld
\end_inset

Type II
\begin_inset Quotes srd
\end_inset

 course)
\end_layout

\begin_layout Subsubsection
a.
 Local modes
\end_layout

\begin_layout Standard
for the 
\begin_inset Quotes sld
\end_inset


\shape italic
Type I
\shape default

\begin_inset Quotes srd
\end_inset

 course students needs to upload different solutions to different assignments,
 and every assignment needs to be evaluated individually, so the repository
 should have a proper file structure to distinguish the student submission
 based on the assignment.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Repository-file-structure-local"

\end_inset

 shows the file structure inside the local git repository.
 With this file structure the teacher can manage the student submission
 more effeiently
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Repository local.png
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Repository file structure in local modes
\begin_inset CommandInset label
LatexCommand label
name "fig:Repository-file-structure-local"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to maintain this file structure and avoid introducing unnecessary
 errors, the address of the git repository is hiden from the student, they
 can only using the course homepage to upload their solutions.
\end_layout

\begin_layout Subsubsection
b.
 Remote modes
\end_layout

\begin_layout Standard
for the 
\begin_inset Quotes sld
\end_inset

Type II
\begin_inset Quotes srd
\end_inset

 course students will obtain the repository address at once when they join
 the course, and use this repository to host their semester project.
 This part works similar as using a github repository.
 Only at the end of the semester or the deadline is due students need to
 use the course homepage to tag the repository, this can generate a evaluation
 request at teacher side so that the teacher can register then evaluation
 result into the sys
\end_layout

\begin_layout Subsection
Dynamic data management
\end_layout

\begin_layout Standard
In order to make the backup or achive process as easy as possible.
 The HMS system introduced a new approch to manage the data.
 first of all the HMS system use multiple databases instead of one central
 database.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/database.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
multiple database based on semester
\begin_inset CommandInset label
LatexCommand label
name "fig:multiple-database"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiple-database"

\end_inset

 shows the database structure in the HMS system.
 The Global database contains all the authentication data including ssh
 public keys,user name, user email, user role and passwords.
 this database is only used for the user management(section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-management"

\end_inset

).
 another database is semester database.
 since the data structure of every semester is same, so the data model for
 semester can be reused in every new semester.
 every time when a new semester beginns, a new clean database for this semester
 will be generated using the same data structure in real time.
 therefore in this case there is no need to query the semester data for
 backing up database.
 
\end_layout

\begin_layout Standard
also the database in this project should work under the embedded modes using
 file storage, first of all the embedded database runs directly in the applicati
on that uses them,it requires no extra server and no maintenance for the
 database itself.
 Another advantage of embedded database is the speed, because all the database
 operations happen inside the application process.
\begin_inset CommandInset citation
LatexCommand cite
key "Chaudhri2003"

\end_inset

and all the relevent data of the database are saved in a single file, backup
 the semester database only need to copy the database file to some where
 else.
 
\end_layout

\begin_layout Standard
In this project the H2 database engine will be used as the default database
 engine.
 first h2 support the embedded mode(file storage) and it is purely written
 in java.
 another reason is that the H2 database support a mixed mode(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mixed-Mode-of-h2"

\end_inset

),mixed mode is a combination of the embedded mode and server mode, the
 first application (in this case the HMS) will use the database as embedded
 mode, but it also starts a server so that the other application(a SQL query
 tool) can still side load the database.
 normally embedded database runs within the application, and is hidden from
 the end user
\begin_inset CommandInset citation
LatexCommand cite
key "Chaudhri2003"

\end_inset

, so there is no way the user can side load the database, but in the real
 life of maintaining the HMS system, direct accessing and manipulating the
 database using a SQL query tool sometimes is more efficiency than the usual
 routine.
 It is also importent to notice that if the application is shut down, the
 server mode will also close all the connections
\begin_inset CommandInset citation
LatexCommand cite
key "h2database"

\end_inset

,therefore side loading a database using remote mode can only take place
 when HMS is still running.
 However the database file generated by the h2 engine can still be loaded
 from the h2 web based manage tools.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/connection-mode-mixed-2.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mixed Mode of h2 server
\begin_inset CommandInset citation
LatexCommand cite
key "h2database"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Mixed-Mode-of-h2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
besides backing up the database, the files from student submission, course
 materials should also be backed up at the same time.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Semester 1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Semester file structure
\begin_inset CommandInset label
LatexCommand label
name "fig:Semester-file-structure"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Semester-file-structure"

\end_inset

 shows the file structure of one semester.
 the uploaded course materials, student's repository are saved with the
 database file under the same folder.
 using a clear file structure to host the uploaded files along with the
 commit history of the student's repository can let the maintainer of the
 system more easily to distinguish the files without looking into the database.
 combine these two methods, the backup procedure of the HMS system only
 need the maintainer to relocate the semester folder and without doing any
 database operation.
\end_layout

\begin_layout Standard
This approach requires the system to create a database in the run time,
 therefore the standard database configuration of play framework can not
 be used.
 The details of implementing the dynamic data management will be demonstrated
 in the next chapter.
\end_layout

\begin_layout Chapter
Implementations
\end_layout

\begin_layout Standard
In this chapter the concrete implementation of the functions from the chapter
 3 will be presented.
 because the data persistent is the precondition for other function to work,
 also it is the key features of the HMS sytem.
 the implementation of dynamic data management and git based file submission
 will be first discussed.
\end_layout

\begin_layout Section
Dynamic Data management
\end_layout

\begin_layout Standard
Dynamic data management consists two parts.
 firstly HMS system can dynamically generate a new database every time when
 a new semester starts, so that created database will only contain the data
 related to that semester.
 secondly the phsical files including the students submission, course materials
 are saved under a unified structure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Semester-file-structure"

\end_inset

.
\end_layout

\begin_layout Subsection
Realtime database generation
\end_layout

\begin_layout Standard
Play framework uses Ebean ORM to access the database,ORM is a technique
 to convert objected oriented programming language(in this case Java) into
 its persistence as a relational data base, so the data can freely exchange
 between a java object and database table.
\begin_inset CommandInset citation
LatexCommand cite
key "K2009"

\end_inset

By default the configuration of Ebean and the database is done by editing
 the configuration file of play framework(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Database-configuration"

\end_inset

).
 Develepor need to define the details of a database and define the java
 data model for the Ebean server, and ebean server will handel all the database
 operation.
 After the application started, there is noway to modified this configuration
 again in the run time.
 therefore this methode can not be used
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\scriptsize},breaklines=true,breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

# Database configuration
\end_layout

\begin_layout Plain Layout

# You can declare as many datasources as you want.
\end_layout

\begin_layout Plain Layout

# By convention, the default datasource is named `default`
\end_layout

\begin_layout Plain Layout

# db.default.driver=org.h2.Driver
\end_layout

\begin_layout Plain Layout

# db.default.url="jdbc:h2:file:~/data/playdb"
\end_layout

\begin_layout Plain Layout

# db.default.user=sa
\end_layout

\begin_layout Plain Layout

# db.default.password=""
\end_layout

\begin_layout Plain Layout

# Ebean configuration
\end_layout

\begin_layout Plain Layout

# You can declare as many Ebean servers as you want.
\end_layout

\begin_layout Plain Layout

# By convention, the default server is named `default`
\end_layout

\begin_layout Plain Layout

# ebean.default="models.*"
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Database configuration 
\begin_inset CommandInset label
LatexCommand label
name "fig:Database-configuration"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to dynamically manage the database, all the configuration has to
 be done programmatically.
 Ebean supports database configuration programmatically.
 but it still need a little modification to make it compatible with playframewor
k.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public static void createServer(String name, List<Class> entity) {
\end_layout

\begin_layout Plain Layout

    ServerConfig config = new ServerConfig();
\end_layout

\begin_layout Plain Layout

    config.setName(name);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    DataSourceConfig h2Db = new DataSourceConfig();
\end_layout

\begin_layout Plain Layout

    h2Db.setDriver("org.h2.Driver");
\end_layout

\begin_layout Plain Layout

    h2Db.setUsername("hms");
\end_layout

\begin_layout Plain Layout

    h2Db.setPassword("test");
\end_layout

\begin_layout Plain Layout

    h2Db.setUrl("jdbc:h2:tcp://localhost/~/data_dynamic/" + name + "/" +
 name)
\end_layout

\begin_layout Plain Layout

    config.setDataSourceConfig(h2Db);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    Path p= Paths.get(System.getProperty("user.home"),"data_dynamic",name,name+".h2.d
b");
\end_layout

\begin_layout Plain Layout

    File f = p.toFile();
\end_layout

\begin_layout Plain Layout

    if(f.exists()){
\end_layout

\begin_layout Plain Layout

    config.setDdlGenerate(false);
\end_layout

\begin_layout Plain Layout

    config.setDdlRun(false);}
\end_layout

\begin_layout Plain Layout

    else
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    config.setDdlGenerate(true);
\end_layout

\begin_layout Plain Layout

    config.setDdlRun(true);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    ...
\end_layout

\begin_layout Plain Layout

    for(int i=0;i<entity.size();i++){
\end_layout

\begin_layout Plain Layout

    config.addClass(entity.get(i));
\end_layout

\begin_layout Plain Layout

    EbeanServer server = EbeanServerFactory.create(config);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Create Ebean Server in runtime 
\begin_inset CommandInset label
LatexCommand label
name "fig:Create-Ebean-Server-runtime"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Create-Ebean-Server-runtime"

\end_inset

 is a static methode which create a ebean server in runtime, this methode
 need two parameters as input, first is the name of database, usally the
 name of a semester for instance 
\begin_inset Quotes sld
\end_inset


\shape italic
WS2016
\shape default

\begin_inset Quotes srd
\end_inset

, second is a list of java class, this list contains all the java data model
 related to this database, ebean needs to use this to create the table for
 the database.
 the configuration of the ebean server and database is strait forward, after
 setting all the parameters to the ebean server and data source, the ebean
 server will be created by the class 
\shape italic
EbeanServerFactory
\shape default
.
 this static methode can be used when there is a need to create a new database.
 In the HMS, the decision of creating new database is made when teacher
 creats new course.
 creating a new course needs teacher to give the name of semester which
 this course belongs to, after the creating new course request is sended
 to the server, the server will first check wether this semester was registered
 already in the semester tabel of global database, if it is already registered,
 the course will be simply written to that semester database, if the inputed
 semester can not be found in the global database, a new database with the
 inputed semester name will be first created then the new course will be
 written in this database.
 after finishing the part of creating database in run time.
 there is only one thing needed to be added to make it work with playframework.
 since the databases are configured during the run time, when the application
 restarted, it will not restore those database automatically, because the
 playframework was originally designed to use the configuration file to
 track the database configuration, and in this case the configuration file
 is empty.
 The workaround for this issue is to track the database file, and reload
 all these database before the application restarted.
 Playframework has already provided a methode to do some actions before
 actually starting the application, this can be used to reload the database.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public class Global extends GlobalSettings{
\end_layout

\begin_layout Plain Layout

    @Override
\end_layout

\begin_layout Plain Layout

    public void onStart(Application application) {
\end_layout

\begin_layout Plain Layout

        super.onStart(application);
\end_layout

\begin_layout Plain Layout

        List<Class> entity = new ArrayList<Class>();
\end_layout

\begin_layout Plain Layout

        entity.add(User.class);
\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

        entity.add(SSH.class);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        List<Class> entity1 = new ArrayList<Class>();
\end_layout

\begin_layout Plain Layout

        entity1.add(Semesteruser.class);
\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

        entity1.add(Conversation.class);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        try {
\end_layout

\begin_layout Plain Layout

            Server h2server = Server.createTcpServer("-tcpAllowOthers");
\end_layout

\begin_layout Plain Layout

            h2server.start();
\end_layout

\begin_layout Plain Layout

        } catch (SQLException e) {
\end_layout

\begin_layout Plain Layout

            e.printStackTrace();
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

        createServer("global", entity);
\end_layout

\begin_layout Plain Layout

        List<Semester> database == Semester.getallsemester();
\end_layout

\begin_layout Plain Layout

        for (int i = 0; i < database.size(); i++) {
\end_layout

\begin_layout Plain Layout

          createServer(database.get(i).semester, entity1);
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Reload the database at application start 
\begin_inset CommandInset label
LatexCommand label
name "fig:Reload-the-database"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reload-the-database"

\end_inset

 demostrate the process of reloading the database.
 list entity contains the data model for the 
\begin_inset Quotes sld
\end_inset

Global
\begin_inset Quotes srd
\end_inset

 database and list entity1 contains the data model for the 
\begin_inset Quotes sld
\end_inset

Semester
\begin_inset Quotes srd
\end_inset

 database(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiple-database"

\end_inset

), first the global database will be first reconstructed, because the name
 of other semester database are saved within the global database, then using
 a loop to reconstruct other semester database.
 it is also should be noticed that between the line of 12 and 21 in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Create-Ebean-Server-runtime"

\end_inset

 has an addtionally implementations of database file detection, if the database
 file is present, the ebean server should not regenerate table relations
 because this action will erase all the data previously saved within this
 database.
 
\end_layout

\begin_layout Standard
It also should notice that because there are multiple databases, the name
 of the database should always be given everytime when there is a CRUD(Create,
 Read, Update, Delete) operation taken place.
 for instance, saving a new course to the semester 
\begin_inset Quotes sld
\end_inset

WS2016
\begin_inset Quotes srd
\end_inset

, it should look like 
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline true
status open

\begin_layout Plain Layout

newcourse.save("WS2016");
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Data models
\end_layout

\begin_layout Standard
There are two types database in HMS.
 one is a global database, it is used for authentication and additionally
 tracking the creation of semester database.
 another is semester database, this database saves all the data that related
 to the Course, Assignment, Evaluation, and Communication.
 so the design of data models for these two type database are also different.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/diagram-global.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Data models for global database 
\begin_inset CommandInset label
LatexCommand label
name "fig:Data-models-for-global"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Data-models-for-global"

\end_inset

shows the data model for the global database, there are 4 class defined,
 first is the 
\shape italic
Users
\shape default
, this class saves all the data from the user registration, for instance
 the user id, email address, password, etc.
 second is the 
\shape italic
SSH
\shape default
, this class saves all the ssh keys for the user, and because one user may
 have multiple ssh keys, there is a 
\begin_inset Quotes sld
\end_inset


\shape italic
One-To-Many
\shape default

\begin_inset Quotes srd
\end_inset

 relations between the 
\shape italic
Users
\shape default
 ahnd SSH.
 the third is Semesters, this class contains all the name of the created
 semester database, the last one is Tokens, this class is used to temporarily
 save the comfirmation token for registration, change email and change password
 actions.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/db-diagram-semester.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Data models for semester database 
\begin_inset CommandInset label
LatexCommand label
name "fig:Data-models-for-semester"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Data-models-for-semester"

\end_inset

 represent the data models of the semester database, because there are more
 activities using semester database, the model is more complicated than
 the global database.
 first is the 
\shape italic
Lecture
\shape default
 class, all the activites around the homework management is about the lecture,
 a lecture includes assignment (Assignment), git repositories(Repos), a
 forum(Thread) and the lecture evaluation(Evaluation) for students.
 and each assignments should generate a lot of handins(Handins) from the
 students.
 besides the lecture related datas, the data of chat system is semester
 related and independently of the lecture.
 at last all these datas are related to the Semesteruser.
 Semesteruser and User are both subclass extends from superclass 
\shape italic
Abstractuser
\shape default
(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Class-Diagram-Semesteruser"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/semesteruser.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram Semesteruser 
\begin_inset CommandInset label
LatexCommand label
name "fig:Class-Diagram-Semesteruser"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ebean supports the JPA (Java Persistence API) annotation 
\begin_inset Quotes sld
\end_inset


\shape italic
@MappedSuperclass
\shape default

\begin_inset Quotes srd
\end_inset

, this annotation designates a class whose mapping information is applied
 to the classes that inherit from it, but will be no table generated for
 the mapped superclass itself.
 
\begin_inset CommandInset citation
LatexCommand cite
key "objectdbjpa"

\end_inset

.
 The common data which will be used both for User and Semesteruser are defined
 in the class 
\begin_inset Quotes sld
\end_inset


\shape italic
Abstractuser
\shape default

\begin_inset Quotes srd
\end_inset

, the database specific data will be defind in the subclass.
 using this methode can first avoid the redudant code, second the semester
 data can be completely seperate from the other data.
 when a register user want to sing up a new course in a semester, his user
 information should be first transformed from the 
\begin_inset Quotes sld
\end_inset

User
\begin_inset Quotes srd
\end_inset

 to 
\begin_inset Quotes sld
\end_inset

Semesteruser
\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public static Semesteruser getSemesteruserfromUser(String database,User
 user){
\end_layout

\begin_layout Plain Layout

        Semesteruser semesteruser = null;
\end_layout

\begin_layout Plain Layout

        try {
\end_layout

\begin_layout Plain Layout

            semesteruser = Semesteruser.findByEmail(user.email, database);
\end_layout

\begin_layout Plain Layout

        } catch (Exception e) {
\end_layout

\begin_layout Plain Layout

            semesteruser = null;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        if (semesteruser == null) {
\end_layout

\begin_layout Plain Layout

            semesteruser = new Semesteruser();
\end_layout

\begin_layout Plain Layout

            semesteruser.email = user.email;
\end_layout

\begin_layout Plain Layout

            semesteruser.firstname = user.firstname;
\end_layout

\begin_layout Plain Layout

            semesteruser.id = user.id;
\end_layout

\begin_layout Plain Layout

            semesteruser.lastname = user.lastname;
\end_layout

\begin_layout Plain Layout

            semesteruser.roles = user.roles;
\end_layout

\begin_layout Plain Layout

            semesteruser.userHash=user.userHash;
\end_layout

\begin_layout Plain Layout

            semesteruser.semester = database;
\end_layout

\begin_layout Plain Layout

            semesteruser.save(database);
\end_layout

\begin_layout Plain Layout

            return semesteruser;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        else{
\end_layout

\begin_layout Plain Layout

            return semesteruser;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User To Semesteruser
\begin_inset CommandInset label
LatexCommand label
name "fig:User-To-Semesteruser"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
as Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:User-To-Semesteruser"

\end_inset

shows, when a user want to sign up a course, the system first find his 
\shape italic
Semesteruser
\shape default
 information, if the 
\shape italic
Semesteruser 
\shape default
object for the current user was not found, a new 
\shape italic
Semesteruser
\shape default
 object will be generated in the semester database based on the user information
 from the global database.
\end_layout

\begin_layout Subsection
File structure
\end_layout

\begin_layout Standard
Besides the database design, the semester related files should also be saved
 under a unified sturcture(Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Semester-file-structure"

\end_inset

).
 define the upload path within the playframework is strait forward, after
 the file was uploaded to the server, then the file can be moved to the
 desired location by the methode 
\begin_inset listings
lstparams "language=Java,basicstyle={\footnotesize}"
inline true
status open

\begin_layout Plain Layout

FileUtils.moveFile();
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
saving the course repository of students is a little complicated, HMS system
 using the gitolite to manage the git repository, and repository created
 by the gitolite is bare repository which doesn't contain a working directory
\begin_inset CommandInset citation
LatexCommand cite
key "gitscm"

\end_inset

, so it is pointless to just copy a bare repository to other place.
 also the gitolite has its own file structure and can not be changed.
 so a possible way is using git Java Api Jgit
\begin_inset CommandInset citation
LatexCommand cite
key "jgitguide"

\end_inset

 to make a clone of this bare repository to the desired destination.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

Repo repo=Repo.findRepoByLectureAndOwner(assignment.semester,semesteruser,assignme
nt.lecture);
\end_layout

\begin_layout Plain Layout

Git git = Git.cloneRepository()
\end_layout

\begin_layout Plain Layout

    .setURI(repo.repofilepath)
\end_layout

\begin_layout Plain Layout

    .setDirectory(localPath)
\end_layout

\begin_layout Plain Layout

    .call();
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Clone repository using JGit 
\begin_inset CommandInset label
LatexCommand label
name "fig:Clone-repository"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Clone-repository"

\end_inset

shows using Jgit to clone a bare repository from gitolite to a 
\begin_inset Quotes sld
\end_inset

localpath
\begin_inset Quotes srd
\end_inset

, which fits the file structure of HMS.
 
\end_layout

\begin_layout Section
Integration of Git
\begin_inset CommandInset label
LatexCommand label
name "sec:Integration-of-Git"

\end_inset


\end_layout

\begin_layout Standard
integration of git
\end_layout

\begin_layout Section
User management
\end_layout

\begin_layout Standard
The implementation of user management system consists following parts:
\end_layout

\begin_layout Enumerate
Registration system
\end_layout

\begin_layout Enumerate
Authentication system
\end_layout

\begin_layout Enumerate
Self manage system
\end_layout

\begin_layout Subsection
Registration system
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/registration form.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration form on home page
\begin_inset CommandInset label
LatexCommand label
name "fig:Registration-form"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Registration-form"

\end_inset

 is the registration form on the HMS home page.
 a new user need to at least type in the email address,firstname,lastname,
 and the password.
 The student number is optional because the multi user roll management of
 the system.
 only students needs to give the studentsnumber and get a student user role
 as default.
 other user will get a random user id and 
\begin_inset Quotes sld
\end_inset

default user
\begin_inset Quotes srd
\end_inset

 user role, and need the system admin to change the user role afterwards.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Save-user-registration"

\end_inset

 shows what happens when user click the singup button in the registration
 form.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public static Result save() {
\end_layout

\begin_layout Plain Layout

        Form<Application.Register> registerForm = form(Application.Register.class).b
indFromRequest();
\end_layout

\begin_layout Plain Layout

        if (registerForm.hasErrors()) {
\end_layout

\begin_layout Plain Layout

            return badRequest(index.render());
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        Application.Register register = registerForm.get();
\end_layout

\begin_layout Plain Layout

        Result resultError = checkBeforeSave(registerForm, register.email);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        if (resultError != null) {
\end_layout

\begin_layout Plain Layout

            return resultError;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        try {
\end_layout

\begin_layout Plain Layout

            User user = new User();
\end_layout

\begin_layout Plain Layout

            if(register.id==null||register.id.isEmpty()){
\end_layout

\begin_layout Plain Layout

                user.id= CreateExternalId.generateId();
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

            else{
\end_layout

\begin_layout Plain Layout

            user.id=register.id;}
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

            user.roles=UserRoll.Students.toString();
\end_layout

\begin_layout Plain Layout

            user.confirmationToken = UUID.randomUUID().toString();
\end_layout

\begin_layout Plain Layout

            user.save("global");
\end_layout

\begin_layout Plain Layout

            sendMailAskForConfirmation(user);
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Save user registration
\begin_inset CommandInset label
LatexCommand label
name "fig:Save-user-registration"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The sign up button is bonded with the function 
\begin_inset Quotes sld
\end_inset


\shape italic
Signup.save()
\shape default

\begin_inset Quotes srd
\end_inset

, at first the data from the 
\shape italic
registerForm
\shape default
 will be checked wether all the required field has been filled, if there
 is a error the user will be redirected to the home page and do the registration
 process again.
 second if the data are correct, the emails from the 
\shape italic
registerForm
\shape default
 will be checked by the function 
\shape italic
checkBeforeSave()
\shape default
 to insure that the email address has not be taken by other users.
 if both tests are proofed, the next step is to check the user id, if the
 user id has been given then this user should be saved with the user role
 of students, if the user id is empty, the user will obtain a user role
 of default user.
 after saving the user registration data alone with the confirmation token
 to the database, a confirmation email with user confirmation token will
 be sent to the user email address by the function 
\shape italic
sendMailAskForConfirmation()
\shape default
.
 At this step the user data are successfully saved into the database and
 waited to be confirmed by the user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

private static void sendMailAskForConfirmation(User user){
\end_layout

\begin_layout Plain Layout

        String subject = Messages.get("mail.confirm.subject");
\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

        urlString += "/confirm/" + user.confirmationToken;
\end_layout

\begin_layout Plain Layout

        URL url = new URL(urlString);
\end_layout

\begin_layout Plain Layout

        String message = Messages.get("mail.confirm.message", url.toString());
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        Mail.Envelop envelop = new Mail.Envelop(subject, message, user.email);
\end_layout

\begin_layout Plain Layout

        Mail.sendMail(envelop);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public static Result confirm(String token) {
\end_layout

\begin_layout Plain Layout

        User user = User.findByConfirmationToken(token,"global");
\end_layout

\begin_layout Plain Layout

        if (user == null) {
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        if (user.validated) {
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        try {
\end_layout

\begin_layout Plain Layout

            if (User.confirm(user,"global")) {
\end_layout

\begin_layout Plain Layout

                sendMailConfirmation(user);
\end_layout

\begin_layout Plain Layout

                user.dateCreation=new Date();
\end_layout

\begin_layout Plain Layout

                user.save("global");
\end_layout

\begin_layout Plain Layout

                return ok(views.html.account.signup.confirm.render(user));
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

        } 
\end_layout

\begin_layout Plain Layout

            ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Confirm registration
\begin_inset CommandInset label
LatexCommand label
name "tab:Confirm-registration"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The user need to use the hyper link(contains confirmation token) to confirm
 their registration, after user clicked the confirmation link, the confirmation
 token will be passed to the methode confirm(), the system then using this
 token to find the correct user record within the database, if the user
 was found then a welcome email will be sent and mark this user as confirmed
 in the database.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/confirmationtoken.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/finish.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration successful 
\begin_inset CommandInset label
LatexCommand label
name "fig:Registration-successful"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
if the details of the user succussfully updated in the database, the system
 will render a modal and user can direct log into their account and start
 using the system.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Registration-successful"

\end_inset

 shows the result of a successful registration, the url from above is the
 confirmation link with the user token.
\end_layout

\begin_layout Subsection
Authentication system
\begin_inset CommandInset label
LatexCommand label
name "sub:Authentication-system"

\end_inset


\end_layout

\begin_layout Standard
The authentication system consists two parts:
\end_layout

\begin_layout Enumerate
Authentication of HMS system
\end_layout

\begin_layout Enumerate
Authentication of Git server
\end_layout

\begin_layout Standard
The first part is the authentication of the HMS system, this part controlls
 the user login activities and protect the system from unauthroized user
 actions, for instance a user with students role can not create a new course
 or make evaluation to a assignment.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/login.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/forget password.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Login and Password recovery 
\begin_inset CommandInset label
LatexCommand label
name "fig:Login-and-Password"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Login-and-Password"

\end_inset

 shows the component of authentication of a user login.
 user used the login form to input their email and password into the system,
 system will first find the user based on their email address, and then
 check the password from the database record and the password from user
 input, since the password is saved as SHA-256 in database for security
 reasons, the clear password of user input should first convert into SHA-256,
 then both passwords will be compared, if they are indentical, then user
 will be redirect to their account homepage.
 
\end_layout

\begin_layout Standard
another function of authentication system is to recover the user password.
 if the user click the link 
\begin_inset Quotes sld
\end_inset

 Forgot password? 
\begin_inset Quotes srd
\end_inset

 a new page will be generated and ask user to input their email address.
 after user input their email address, the methode from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reset-Password"

\end_inset

 will excuted.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public static Result runAsk() {
\end_layout

\begin_layout Plain Layout

        Form<AskForm> askForm = form(AskForm.class).bindFromRequest();
\end_layout

\begin_layout Plain Layout

        User user = User.findByEmail(email,"global");
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        if (user == null) {
\end_layout

\begin_layout Plain Layout

            sendFailedPasswordResetAttempt(email);
\end_layout

\begin_layout Plain Layout

            return ok(views.html.account.reset.runAsk.render());
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        try {
\end_layout

\begin_layout Plain Layout

            Token.sendMailResetPassword(user,"global");
\end_layout

\begin_layout Plain Layout

            return ok(views.html.account.reset.runAsk.render());
\end_layout

\begin_layout Plain Layout

        } catch (MalformedURLException e) {
\end_layout

\begin_layout Plain Layout

            Logger.error("Cannot validate URL", e);
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout
\noindent

        return badRequest(ask.render(askForm));
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Reset Password 
\begin_inset CommandInset label
LatexCommand label
name "fig:Reset-Password"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
runAsk()
\shape default
 first check wether a user with the input email exist in the database.
 for security reason, if the user did not exist, the system shouldn't expose
 any result to the user, instead sending a email to notify the person that
 the reset has failed.
 if the user do find with the input email, the rest actions will be same
 as the registration, the user will receive a email with a hyperlink with
 reset token, click this hyperlink will generate a password reset page,
 at this page the user can modify their passwords.
\end_layout

\begin_layout Standard
Beside the authentication of user logins, there is another authentication
 based on the user role.
 The playframework use actions to serve http request, an action is basically
 a Java method that processes the data from the http request.
\begin_inset CommandInset citation
LatexCommand cite
key "playframeworkdocu"

\end_inset

if an unauthorized person can mock a correct http request, this person can
 basically excute any actions implemented in server logic.
 in order to prevent an unauthorized actions, playframework come with a
 built in authenticator action called 
\shape italic
Secured
\shape default
.
 
\begin_inset CommandInset citation
LatexCommand cite
key "playframeworkdocu"

\end_inset

 in the case of HMS system, some actions can only be excuted by user role
 of teacher, the additionally secured class implementation should distiguish
 the current user role and decide whether the actions should be excuted
 for the current user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,basicstyle={\scriptsize},breaklines=true,captionpos=b,frame=tb"
inline false
status open

\begin_layout Plain Layout

public class Securedteacher extends Security.Authenticator{
\end_layout

\begin_layout Plain Layout

    @Override
\end_layout

\begin_layout Plain Layout

    public String getUsername(Http.Context ctx) {
\end_layout

\begin_layout Plain Layout

        User current=User.findByEmail(ctx.session().get("email"), "global");
\end_layout

\begin_layout Plain Layout

        if(current!=null) {
\end_layout

\begin_layout Plain Layout

            if (current.roles.equals(UserRoll.Teachers.toString())) {
\end_layout

\begin_layout Plain Layout

                return ctx.session().get("email");
\end_layout

\begin_layout Plain Layout

            } else {
\end_layout

\begin_layout Plain Layout

                return null;
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        }else{
\end_layout

\begin_layout Plain Layout

            return null;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    @Override
\end_layout

\begin_layout Plain Layout

    public Result onUnauthorized(Http.Context ctx) {
\end_layout

\begin_layout Plain Layout

        User current=User.findByEmail(ctx.session().get("email"), "global");
\end_layout

\begin_layout Plain Layout

        return ok(forbidden.render(current));
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@Security.Authenticated(Securedteacher.class)
\end_layout

\begin_layout Plain Layout

public static Result createlecture() {
\end_layout

\begin_layout Plain Layout

          ...
\end_layout

\begin_layout Plain Layout

         }
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Secured actions 
\begin_inset CommandInset label
LatexCommand label
name "fig:Secured-actions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Secured-actions"

\end_inset

 shows the secured class implementation and usage for user role teacher.
 at first using the 
\shape italic
Http.Context
\shape default
 session to get current user, then compare the current user role to the
 required user role, if they are indentical, the email address of the current
 user will be returned, otherwise 
\shape italic
null
\shape default
 will be returned.
 after the definition of the playframework documentation.
 if methode 
\shape italic
getUsername()
\shape default
 returns a string, tagged action 
\shape italic
createlecture()
\shape default
 will be excuted for the current user.
 if 
\shape italic
getUsername()
\shape default
 returns value 
\shape italic
null
\shape default
, the methode 
\shape italic
onUnauthorized()
\shape default
 will be excuted, in this example, a web page 
\begin_inset Quotes sld
\end_inset


\shape italic
forbidden
\shape default

\begin_inset Quotes srd
\end_inset

 will be generated for the current user, and notice the user that this action
 can not be accomplished with his current user role.
\end_layout

\begin_layout Standard
The second part of authentication related to the git server, because the
 git function is using gitolite to manage the access rights of the student's
 repo, it has a seperate authentication system using SSH public key mechanism.
 The detail implementaion will be discussed in the secion 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Integration-of-Git"

\end_inset

.
\end_layout

\begin_layout Subsection
Self management
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/updateemail.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/addssh.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Self management 
\begin_inset CommandInset label
LatexCommand label
name "fig:Self-management"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Self-management"

\end_inset

 shows the component of the self management system, at the settings page
 of user, user can update their ssh, password and email.
 updating password and email using the same mechanismus from the section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentication-system"

\end_inset

, if a user want to change their email or password, the HMS system will
 always sending a confirmation email with a confirmation token, only after
 user comfirming the changes from the url within the email, the changes
 then can be saved into the database, it is a neccssary step to offer more
 security to sensitive data.
 and in order to use the git repository, user also need to add at least
 one ssh public key from their working terminals.
 because the HMS system using the gitolite to manage the git repository,
 and gitolite using ssh keys to manage the access rights of the git repository.
 the implenmentation of integration gitolite will be showed in the section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Integration-of-Git"

\end_inset

.
\end_layout

\begin_layout Section
Course management
\end_layout

\begin_layout Standard
course management
\end_layout

\begin_layout Section
Assignment management
\end_layout

\begin_layout Standard
assignment management
\end_layout

\begin_layout Section
Communication system
\end_layout

\begin_layout Standard
communication system
\end_layout

\begin_layout Chapter
System usage
\end_layout

\begin_layout Standard
Test run?
\end_layout

\begin_layout Section
First run
\end_layout

\begin_layout Chapter
Evaluation
\end_layout

\begin_layout Chapter
Summary and Outlook
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\begin_layout Plain Layout


\backslash
phantomsection
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Glossary}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HMS"
description "Homework Management System"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ORM"
description "Object-relational mapping"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\begin_layout Plain Layout


\backslash
phantomsection
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "bibtex-daten/bachelorarbeit-info"
options "bibtotoc,bibtex-daten/unsrtdin"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\end_body
\end_document
